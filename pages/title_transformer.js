// import module
import React, { useEffect, useState, useRef } from 'react'
import { Box, Flex, VStack, HStack, Heading, Divider, Text, Button} from '@chakra-ui/react'
import Head from 'next/head'
import Navbar from '../components/Navbar'

function title_transformer() {
    //initialize state
    const [title, setTitle] = useState([{title: 1, color: "#000000"},]);
    const [random, setRandom] = useState(false);
    const [seconds, setSeconds] = useState(0);

    //initialize variable, ref and color[array] 
    let currColor = 0;
    var colorInterv = useRef();
    let colors = [
        "cyan.300", "green.300", 
        "red.500", "purple.300", 
        "pink.300", "orange.400", 
        "yellow.200"
    ];

    //useEffect to change color every second depending on the random state
    useEffect(() => {
        if(!random) {
            return;
        };
        const id = setInterval(changeColor, 1000);
        colorInterv.current = id;
        return () => clearInterval(id);
    }, [random]);

    //function to change color
    const changeColor = () => {
        setSeconds(seconds => seconds + 1);
        setTitle(prev => {
            const newState = prev.map(obj => {
                if(currColor >= colors.length - 1) {
                    currColor = 0;
                }
                currColor++
                return {...obj, color: colors[currColor]};
            })
            return newState;
        });
    };

    //function handle random state
    const handleRandom = () => {
        if(!random) {
            start();
        } else {
            stop();
        };
    };

    //function to start the color changing
    const start = () => {
        setRandom(true)
    };

    //function to stop the color changing
    const stop = () => {
        console.log("stop");
        setRandom(false);
        clearInterval(colorInterv.current);
        colorInterv = null;
        setSeconds(0);
        setTitle(item => {
            return item.map(obj => {
                return {...obj, color: "#000000"}
            });
        });
    };

    //function to add a new title
    const addTitle = () => {
        if(title.length < 5) {
            setTitle([...title, { 
                title: title.length + 1,
                color: "#000000"
            }]);
        };
    };

    //function to remove a title
    const removeTitle = () => {
        if(title.length > 1) {
            setTitle(title.slice(0, title.length - 1));
        };
    };

    //Returnig whole page
    return (
        <Box>
            <Head>
                <title>Intership Program | Title</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Navbar url="Title Transformer"/>
            <Flex flexDirection="column" minH="100vh" align="center" justify="center">
                <VStack>
                <Box>
                    {title.map((item, index) => {
                        return (
                            <Box key={index}>
                                {item.title === 1 ? 
                                <Heading textAlign="center" lineHeight="1.2" fontSize="4xl" color={item.color}>Internship Program - {item.title}</Heading>
                                : 
                                <Heading textAlign="center" marginTop={8} lineHeight="1.2" fontSize="4xl" color={item.color}>Internship Program - {item.title}</Heading>} 
                            </Box>
                        )
                    })}
                    <VStack mt="8" marginInline="0px" marginBottom="0px">
                    <Divider color="rgba(0,0,0,0.1)" />
                        <HStack mt="3" marginInline="0px" marginBottom="0px">
                            <Text as="p" lineHeight="0" >Running for: {seconds}s</Text>
                            <Divider orientation='vertical' h="20px" marginInline="0.5rem 0px" color="rgba(0,0,0,0.1)"/>
                            <Text as="p" lineHeight="0" marginInline="0.5rem 0px">Title count: {title.length}</Text>
                        </HStack>
                        <Divider mt="8" color="rgba(0,0,0,0.1)"/>
                        <HStack mt="3" marginInline="0px" marginBottom="0px" spacing={8}>
                            <Button colorScheme='gray' fontWeight="semibold" h="10" minW="10" 
                            fontSize="md"  onClick={handleRandom}>{random ?  "Clear Color" : "Randomize Color"}</Button>

                            <Button colorScheme='gray' fontWeight="semibold" h="10" minW="10" 
                            fontSize="md" isDisabled={title.length < 5 ? false : true} onClick={addTitle}>Add title</Button>

                            <Button colorScheme='gray' fontWeight="semibold" h="10" minW="10" 
                            fontSize="md"  isDisabled={title.length > 1 ? false : true} onClick={removeTitle}>Remove title</Button>
                        </HStack>
                    </VStack>
                </Box>
                </VStack>
            </Flex>
        </Box>
    )
}

export default title_transformer